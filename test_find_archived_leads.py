"""
–¢–µ—Å—Ç: –ó–Ω–∞–π—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞—Ä—Ö—ñ–≤–Ω–∏—Ö –ª—ñ–¥—ñ–≤ (7,788 –∑–∞–ø–∏—Å—ñ–≤).

–°—Ç—Ä–∞—Ç–µ–≥—ñ—è:
1. –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ë–ï–ó is_study –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
2. –î–æ–¥–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ archived –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
3. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ is_study=-1, NULL, 99
4. –ö–æ–º–±—ñ–Ω—É–≤–∞—Ç–∏ –∑ lead_reject_id —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
"""
import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests

load_dotenv()

app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

from connectors.crm import alfacrm_auth_get_token

base_url = os.getenv('ALFACRM_BASE_URL')
token = alfacrm_auth_get_token()

print('=' * 80)
print('[INFO] –ü–û–®–£–ö –ü–ê–†–ê–ú–ï–¢–†–ê –î–õ–Ø –ê–†–•–Ü–í–ù–ò–• –õ–Ü–î–Ü–í')
print('=' * 80)


def test_request(test_name, payload, max_pages=3):
    """–ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç —ñ –ø–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏"""
    print(f'\n[TEST] {test_name}')
    print(f'  Payload: {payload}')

    try:
        response = requests.post(
            f'{base_url}/v2api/customer/index',
            headers={'X-ALFACRM-TOKEN': token},
            json=payload,
            timeout=10
        )

        if response.status_code != 200:
            print(f'  ‚ùå HTTP {response.status_code}: {response.text[:100]}')
            return

        data = response.json()
        items = data.get('items', [])

        if not items:
            print(f'  ‚ùå 0 –∑–∞–ø–∏—Å—ñ–≤')
            return

        # –ó–±–∏—Ä–∞—î–º–æ –∫—ñ–ª—å–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
        all_records = items[:]
        page = 2

        while page <= max_pages:
            payload_copy = payload.copy()
            payload_copy['page'] = page

            resp = requests.post(
                f'{base_url}/v2api/customer/index',
                headers={'X-ALFACRM-TOKEN': token},
                json=payload_copy,
                timeout=10
            )

            page_items = resp.json().get('items', [])
            if not page_items:
                break

            all_records.extend(page_items)
            page += 1

        # –ê–Ω–∞–ª—ñ–∑ –∞—Ä—Ö—ñ–≤–Ω–∏—Ö
        archived = [r for r in all_records
                   if r.get('lead_reject_id') or r.get('customer_reject_id')]

        print(f'  ‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(all_records)} –∑–∞–ø–∏—Å—ñ–≤ ({page-1} —Å—Ç–æ—Ä—ñ–Ω–æ–∫)')
        print(f'     –ê—Ä—Ö—ñ–≤–Ω–∏—Ö (reject_id != null): {len(archived)}')
        print(f'     –ù–µ –∞—Ä—Ö—ñ–≤–Ω–∏—Ö: {len(all_records) - len(archived)}')

        # –ü–æ–∫–∞–∑–∞—Ç–∏ is_study —Ä–æ–∑–ø–æ–¥—ñ–ª
        is_study_counts = {}
        for r in all_records:
            val = r.get('is_study', 'NULL')
            is_study_counts[val] = is_study_counts.get(val, 0) + 1

        print(f'     is_study —Ä–æ–∑–ø–æ–¥—ñ–ª: {is_study_counts}')

        # –Ø–∫—â–æ –±–∞–≥–∞—Ç–æ –∞—Ä—Ö—ñ–≤–Ω–∏—Ö - —Ü–µ —É—Å–ø—ñ—Ö!
        if len(archived) > 100:
            print(f'  üéØ –ú–û–ñ–õ–ò–í–û –ó–ù–ê–ô–®–õ–ò! {len(archived)} –∞—Ä—Ö—ñ–≤–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤!')

            # –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥ –∞—Ä—Ö—ñ–≤–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É
            sample = archived[0]
            print(f'\n  –ü—Ä–∏–∫–ª–∞–¥ –∞—Ä—Ö—ñ–≤–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É:')
            print(f'    ID: {sample.get("id")}')
            print(f'    –ü–Ü–ë: {sample.get("name")}')
            print(f'    is_study: {sample.get("is_study")}')
            print(f'    lead_reject_id: {sample.get("lead_reject_id")}')
            print(f'    customer_reject_id: {sample.get("customer_reject_id")}')

    except Exception as e:
        print(f'  ‚ùå ERROR: {e}')


print('\n[–ì–†–£–ü–ê 1] –ë–ï–ó is_study —Ñ—ñ–ª—å—Ç—Ä–∞')
print('-' * 80)

# –¢–µ—Å—Ç 1: –ó–æ–≤—Å—ñ–º –±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
test_request('–ë–µ–∑ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ (—Ç—ñ–ª—å–∫–∏ page, page_size)', {
    'page': 1,
    'page_size': 100
})

# –¢–µ—Å—Ç 2: –ó —Ä—ñ–∑–Ω–∏–º–∏ archived –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
test_request('archived=1', {
    'archived': 1,
    'page': 1,
    'page_size': 100
})

test_request('archived=true', {
    'archived': True,
    'page': 1,
    'page_size': 100
})

test_request('is_archive=1', {
    'is_archive': 1,
    'page': 1,
    'page_size': 100
})

test_request('archive=1', {
    'archive': 1,
    'page': 1,
    'page_size': 100
})

test_request('only_archived=1', {
    'only_archived': 1,
    'page': 1,
    'page_size': 100
})

print('\n[–ì–†–£–ü–ê 2] is_study=NULL –∞–±–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è')
print('-' * 80)

test_request('is_study=None (NULL)', {
    'is_study': None,
    'page': 1,
    'page_size': 100
})

test_request('is_study=-1', {
    'is_study': -1,
    'page': 1,
    'page_size': 100
})

test_request('is_study=99', {
    'is_study': 99,
    'page': 1,
    'page_size': 100
})

print('\n[–ì–†–£–ü–ê 3] –ö–æ–º–±—ñ–Ω–∞—Ü—ñ—ó lead_reject_id')
print('-' * 80)

test_request('–ë–ï–ó is_study + lead_reject_id != null', {
    'page': 1,
    'page_size': 100
    # –ù–∞ –∂–∞–ª—å API –º–æ–∂–µ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ $ne, –∞–ª–µ —Å–ø—Ä–æ–±—É—î–º–æ
})

test_request('lead_reject_id —ñ—Å–Ω—É—î (—Å–ø—Ä–æ–±–∞ 1)', {
    'lead_reject_id': {'$exists': True},
    'page': 1,
    'page_size': 100
})

test_request('lead_reject_id –Ω–µ null (—Å–ø—Ä–æ–±–∞ 2)', {
    'lead_reject_id': {'$ne': None},
    'page': 1,
    'page_size': 100
})

print('\n[–ì–†–£–ü–ê 4] –§—ñ–ª—å—Ç—Ä–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö')
print('-' * 80)

# –ó UI –≤—ñ–¥–æ–º–æ —â–æ —î —Å—Ç–∞—Ç—É—Å–∏: –ù–µ —Ä–æ–∑—ñ–±—Ä–∞–Ω–æ, –ù–µ–¥–æ–¥–∑–≤–æ–Ω, –ù–µ–¥–æ–∑–≤–æ–Ω 2, –ù–µ–¥–æ–∑–≤–æ–Ω 3
# –á—Ö ID –±—É–ª–∏: 13, 11, 10, 27 (–∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —Ç–µ—Å—Ç—ñ–≤)

test_request('lead_status_id=13 (–ù–µ —Ä–æ–∑—ñ–±—Ä–∞–Ω–æ)', {
    'lead_status_id': 13,
    'page': 1,
    'page_size': 100
})

test_request('lead_status_id=11 (–ù–µ–¥–æ–¥–∑–≤–æ–Ω)', {
    'lead_status_id': 11,
    'page': 1,
    'page_size': 100
})

print('\n' + '=' * 80)
print('[INFO] –¢–ï–°–¢–ò –ó–ê–í–ï–†–®–ï–ù–û')
print('=' * 80)
