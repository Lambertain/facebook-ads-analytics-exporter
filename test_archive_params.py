"""
–¢–µ—Å—Ç: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ª–∏–¥–æ–≤
"""
import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests

load_dotenv()

app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

from connectors.crm import alfacrm_auth_get_token


def test_archive_params():
    """–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ª–∏–¥–æ–≤")
    print("="*80)

    token = alfacrm_auth_get_token()
    base_url = os.getenv("ALFACRM_BASE_URL").rstrip('/')
    company_id = int(os.getenv("ALFACRM_COMPANY_ID"))

    url = f"{base_url}/v2api/customer/index"

    # –°–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_cases = [
        {"name": "archived=1", "params": {"archived": 1, "page": 1, "page_size": 50}},
        {"name": "archived=true", "params": {"archived": True, "page": 1, "page_size": 50}},
        {"name": "is_archived=1", "params": {"is_archived": 1, "page": 1, "page_size": 50}},
        {"name": "is_archive=1", "params": {"is_archive": 1, "page": 1, "page_size": 50}},
        {"name": "archive=1", "params": {"archive": 1, "page": 1, "page_size": 50}},
        {"name": "status=archived", "params": {"status": "archived", "page": 1, "page_size": 50}},
        {"name": "is_study=0 + archived=1", "params": {"is_study": 0, "archived": 1, "page": 1, "page_size": 50}},
        {"name": "branch_ids + archived=1", "params": {"branch_ids": [company_id], "archived": 1, "page": 1, "page_size": 50}},
        {"name": "rejected=1", "params": {"rejected": 1, "page": 1, "page_size": 50}},
        {"name": "is_rejected=1", "params": {"is_rejected": 1, "page": 1, "page_size": 50}},
    ]

    for test_case in test_cases:
        name = test_case["name"]
        params = test_case["params"]

        print(f"\n[{name}]:")

        try:
            resp = requests.post(
                url,
                headers={"X-ALFACRM-TOKEN": token},
                json=params,
                timeout=15
            )

            if resp.status_code != 200:
                print(f"  ‚úó –û—à–∏–±–∫–∞ HTTP {resp.status_code}")
                continue

            data = resp.json()
            items = data.get('items', [])
            count = data.get('count', 0)

            print(f"  –ü–æ–ª—É—á–µ–Ω–æ: {len(items)} –ª–∏–¥–æ–≤, count: {count}")

            if items:
                # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–≤–æ–≥–æ –ª–∏–¥–∞
                lead = items[0]
                lead_reject_id = lead.get('lead_reject_id')
                is_study = lead.get('is_study')

                print(f"  –ü–µ—Ä–≤—ã–π –ª–∏–¥: ID={lead.get('id')}, lead_reject_id={lead_reject_id}, is_study={is_study}")

                # –ü–æ—Å—á–∏—Ç–∞–µ–º –∞—Ä—Ö–∏–≤–Ω—ã—Ö
                archived = [l for l in items if l.get('lead_reject_id') is not None]
                if archived:
                    print(f"  ‚úì‚úì‚úì –ï–°–¢–¨ –ê–†–•–ò–í–ù–´–ï: {len(archived)} –∏–∑ {len(items)}")
                    for l in archived[:3]:
                        print(f"    ID={l.get('id')}, reject_id={l.get('lead_reject_id')}, –∏–º—è={l.get('name')}")

                    # –ù–ê–®–õ–ò!
                    print(f"\n  {'='*70}")
                    print(f"  üéØ –ù–ê–®–õ–ò –†–ê–ë–û–ß–ò–ô –ü–ê–†–ê–ú–ï–¢–†: {name}")
                    print(f"  {'='*70}")
                    return
                else:
                    print(f"  ‚úó –í—Å–µ —Å lead_reject_id=None")

        except Exception as e:
            print(f"  ‚úó –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

    print("\n" + "="*80)
    print("‚ùå –ù–ò –û–î–ò–ù –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
    print("="*80)


if __name__ == "__main__":
    test_archive_params()
