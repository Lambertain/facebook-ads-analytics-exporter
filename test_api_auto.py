"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ /api/meta-data endpoint —á–µ—Ä–µ–∑ HTTP.
"""
import requests
import json
import sys
from datetime import datetime, timedelta

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è (–æ—Å—Ç–∞–Ω–Ω—ñ 3 –¥–Ω—ñ –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ —Ç–µ—Å—Ç—É)
end_date = datetime.now().strftime("%Y-%m-%d")
start_date = (datetime.now() - timedelta(days=3)).strftime("%Y-%m-%d")

print("\n" + "="*80)
print("üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø /api/meta-data ENDPOINT")
print("="*80)
print(f"\nüìÖ –ü–µ—Ä—ñ–æ–¥: {start_date} - {end_date}")

# URL endpoint
endpoint = "http://127.0.0.1:8000/api/meta-data"

try:
    print(f"\n‚è≥ –í–∏–∫–ª–∏–∫–∞—é API... (timeout 120s)")

    response = requests.get(
        endpoint,
        params={"start_date": start_date, "end_date": end_date},
        timeout=120
    )

    print(f"üì° HTTP Status: {response.status_code}")

    if response.status_code == 200:
        result = response.json()

        print("\n" + "-"*80)
        print("üìä –°–¢–†–£–ö–¢–£–†–ê –í–Ü–î–ü–û–í–Ü–î–Ü:")
        print("-"*80)

        for key in result.keys():
            if key in ["ads", "students", "teachers"]:
                count = len(result[key]) if isinstance(result[key], list) else 0
                print(f"  ‚Ä¢ {key}: {count} –∑–∞–ø–∏—Å—ñ–≤")
            elif key == "column_metadata":
                print(f"  ‚Ä¢ {key}: {len(result[key])} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
            elif key == "lead_phones":
                students_campaigns = len(result[key].get("students", {}))
                teachers_campaigns = len(result[key].get("teachers", {}))
                print(f"  ‚Ä¢ {key}: students={students_campaigns} campaigns, teachers={teachers_campaigns} campaigns")
            else:
                print(f"  ‚Ä¢ {key}: {result[key]}")

        # column_metadata
        if "column_metadata" in result:
            print("\n" + "-"*80)
            print("üé® COLUMN METADATA:")
            print("-"*80)

            for data_type in ["students", "teachers", "ads"]:
                if data_type in result["column_metadata"]:
                    meta = result["column_metadata"][data_type]
                    meta_c = sum(1 for v in meta.values() if v == "meta")
                    crm_c = sum(1 for v in meta.values() if v == "crm")
                    formula_c = sum(1 for v in meta.values() if v == "formula")

                    print(f"\n  {data_type.upper()}:")
                    print(f"    üîµ Meta: {meta_c} | üî¥ CRM: {crm_c} | üü¢ Formula: {formula_c} | Total: {len(meta)}")

        # lead_phones
        if "lead_phones" in result:
            print("\n" + "-"*80)
            print("üìû LEAD PHONES:")
            print("-"*80)

            for data_type in ["students", "teachers"]:
                if data_type in result["lead_phones"] and result["lead_phones"][data_type]:
                    phones_data = result["lead_phones"][data_type]
                    print(f"\n  {data_type.upper()}: {len(phones_data)} campaigns")

                    # –ü–æ–∫–∞–∑—É—î–º–æ –æ–¥–Ω—É –∫–∞–º–ø–∞–Ω—ñ—é —è–∫ –ø—Ä–∏–∫–ª–∞–¥
                    if phones_data:
                        campaign_id, status_data = list(phones_data.items())[0]
                        print(f"    Sample campaign ({campaign_id}): {len(status_data)} statuses")

                        # –ü–æ–∫–∞–∑—É—î–º–æ –æ–¥–∏–Ω —Å—Ç–∞—Ç—É—Å
                        if status_data:
                            status_name, phones = list(status_data.items())[0]
                            passed = sum(1 for p in phones if p.get("status") == "passed")
                            current = sum(1 for p in phones if p.get("status") == "current")
                            print(f"      Sample status '{status_name}': {len(phones)} phones (üî¥{passed} passed, üü¢{current} current)")

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with open("test_api_response.json", "w", encoding="utf-8") as f:
            json.dump(result, f, indent=2, ensure_ascii=False)
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: test_api_response.json")

        print("\n" + "="*80)
        print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û")
        print("="*80)
        sys.exit(0)
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
        print(response.text[:500])
        sys.exit(1)

except Exception as e:
    print(f"\n‚ùå –ü–û–ú–ò–õ–ö–ê: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
