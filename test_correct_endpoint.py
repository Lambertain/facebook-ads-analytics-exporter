"""
–¢–µ—Å—Ç: –ü–†–ê–í–ò–õ–¨–ù–´–ô endpoint –¥–ª—è –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ª–∏–¥–æ–≤ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""
import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests

load_dotenv()

app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

from connectors.crm import alfacrm_auth_get_token


def test_correct_endpoint():
    """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ü–†–ê–í–ò–õ–¨–ù–´–ô endpoint /api/v2/{branch}/lead/reject")
    print("="*80)

    token = alfacrm_auth_get_token()
    base_url = os.getenv("ALFACRM_BASE_URL").rstrip('/')
    company_id = int(os.getenv("ALFACRM_COMPANY_ID"))

    # –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: GET /api/v2/{—É—á–µ–±–Ω—ã–π_—Ü–µ–Ω—Ç—Ä}/lead/reject
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã

    endpoints = [
        f"{base_url}/api/v2/{company_id}/lead/reject",
        f"{base_url}/api/v2/lead/reject",
        f"{base_url}/v2api/{company_id}/lead/reject",
        f"{base_url}/v2api/lead/reject",
    ]

    for endpoint in endpoints:
        print(f"\n[–¢–µ—Å—Ç–∏—Ä—É–µ–º: {endpoint}]")

        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º GET –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            resp = requests.get(
                endpoint,
                headers={"X-ALFACRM-TOKEN": token},
                params={"limit": 50, "page": 1},
                timeout=15
            )

            print(f"  GET —Å—Ç–∞—Ç—É—Å: {resp.status_code}")

            if resp.status_code == 200:
                data = resp.json()

                # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                if isinstance(data, dict):
                    items = data.get('items', data.get('data', []))
                    count = data.get('count', data.get('total', 0))
                elif isinstance(data, list):
                    items = data
                    count = len(data)
                else:
                    items = []
                    count = 0

                print(f"  ‚úì –†–ê–ë–û–¢–ê–ï–¢! items: {len(items)}, count/total: {count}")

                if items:
                    # –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
                    lead = items[0]
                    print(f"  –ü–µ—Ä–≤—ã–π –ª–∏–¥:")
                    print(f"    ID: {lead.get('id')}")
                    print(f"    lead_reject_id: {lead.get('lead_reject_id')}")
                    print(f"    –ò–º—è: {lead.get('name')}")

                    # –ü–æ—Å—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å lead_reject_id
                    with_reject = [l for l in items if l.get('lead_reject_id') is not None]
                    print(f"  –° lead_reject_id != None: {len(with_reject)}")

                    if with_reject:
                        print(f"  üéØüéØüéØ –ù–ê–®–õ–ò –ê–†–•–ò–í–ù–´–ï –õ–ò–î–´!")
                        return endpoint

            elif resp.status_code == 404:
                print(f"  ‚úó 404 Not Found")

            else:
                print(f"  ‚úó –°—Ç–∞—Ç—É—Å {resp.status_code}")

        except Exception as e:
            print(f"  ‚úó GET –æ—à–∏–±–∫–∞: {e}")

        # –ü–æ–ø—Ä–æ–±—É–µ–º POST
        try:
            resp = requests.post(
                endpoint,
                headers={"X-ALFACRM-TOKEN": token},
                json={"limit": 50, "page": 1},
                timeout=15
            )

            print(f"  POST —Å—Ç–∞—Ç—É—Å: {resp.status_code}")

            if resp.status_code == 200:
                data = resp.json()

                if isinstance(data, dict):
                    items = data.get('items', data.get('data', []))
                    count = data.get('count', data.get('total', 0))
                elif isinstance(data, list):
                    items = data
                    count = len(data)
                else:
                    items = []
                    count = 0

                print(f"  ‚úì POST –†–ê–ë–û–¢–ê–ï–¢! items: {len(items)}, count: {count}")

                if items:
                    lead = items[0]
                    print(f"  –ü–µ—Ä–≤—ã–π –ª–∏–¥: ID={lead.get('id')}, reject_id={lead.get('lead_reject_id')}")

                    with_reject = [l for l in items if l.get('lead_reject_id') is not None]
                    print(f"  –° lead_reject_id != None: {len(with_reject)}")

                    if with_reject:
                        print(f"  üéØüéØüéØ –ù–ê–®–õ–ò –ê–†–•–ò–í–ù–´–ï –õ–ò–î–´ –ß–ï–†–ï–ó POST!")
                        return endpoint

        except Exception as e:
            print(f"  ‚úó POST –æ—à–∏–±–∫–∞: {e}")

    print("\n" + "="*80)
    print("‚ùå –ù–∏ –æ–¥–∏–Ω endpoint –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
    print("="*80)


if __name__ == "__main__":
    result = test_correct_endpoint()
    if result:
        print(f"\n{'='*80}")
        print(f"üéØ –ù–ê–ô–î–ï–ù –†–ê–ë–û–ß–ò–ô ENDPOINT: {result}")
        print(f"{'='*80}")
