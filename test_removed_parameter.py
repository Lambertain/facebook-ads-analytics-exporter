"""
–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–•–û–î–ö–ê –æ—Ç ChatGPT: –ø–∞—Ä–∞–º–µ—Ç—Ä 'removed' –¥–ª—è –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ª–∏–¥–æ–≤!

–¢–µ—Å—Ç–∏—Ä—É–µ–º:
- removed=0 (—Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ)
- removed=1 (–∞–∫—Ç–∏–≤–Ω—ã–µ + –∞—Ä—Ö–∏–≤–Ω—ã–µ)
- removed=2 (—Ç–æ–ª—å–∫–æ –∞—Ä—Ö–∏–≤–Ω—ã–µ)

Plus –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
- removed_from, removed_to (–¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç)
"""
import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests
from datetime import datetime, timedelta

load_dotenv()

app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

from connectors.crm import alfacrm_auth_get_token

base_url = os.getenv('ALFACRM_BASE_URL')
token = alfacrm_auth_get_token()

print('=' * 80)
print('[–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢] –ü–ê–†–ê–ú–ï–¢–† removed –î–õ–Ø –ê–†–•–ò–í–ù–´–• –õ–ò–î–û–í')
print('=' * 80)


def test_removed(test_name, payload, max_pages=5):
    """–ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º removed"""
    print(f'\n[TEST] {test_name}')
    print(f'  Payload: {payload}')

    try:
        response = requests.post(
            f'{base_url}/v2api/customer/index',
            headers={'X-ALFACRM-TOKEN': token},
            json=payload,
            timeout=15
        )

        if response.status_code != 200:
            print(f'  ‚ùå HTTP {response.status_code}: {response.text[:200]}')
            return

        data = response.json()
        items = data.get('items', [])

        if not items:
            print(f'  ‚ùå 0 –∑–∞–ø–∏—Å—ñ–≤')
            return

        # –ó–±–∏—Ä–∞—î–º–æ –∫—ñ–ª—å–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
        all_records = items[:]
        page = 2

        while page <= max_pages:
            payload_copy = payload.copy()
            payload_copy['page'] = page

            resp = requests.post(
                f'{base_url}/v2api/customer/index',
                headers={'X-ALFACRM-TOKEN': token},
                json=payload_copy,
                timeout=15
            )

            page_items = resp.json().get('items', [])
            if not page_items:
                break

            all_records.extend(page_items)
            page += 1

        # –ê–Ω–∞–ª—ñ–∑ –∞—Ä—Ö—ñ–≤–Ω–∏—Ö
        with_lead_reject = [r for r in all_records if r.get('lead_reject_id')]
        with_customer_reject = [r for r in all_records if r.get('customer_reject_id')]
        archived_total = len(set([r['id'] for r in with_lead_reject + with_customer_reject]))

        print(f'  ‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(all_records)} –∑–∞–ø–∏—Å—ñ–≤ ({page-1} —Å—Ç–æ—Ä—ñ–Ω–æ–∫)')
        print(f'     –ó lead_reject_id: {len(with_lead_reject)}')
        print(f'     –ó customer_reject_id: {len(with_customer_reject)}')
        print(f'     –£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∞—Ä—Ö—ñ–≤–Ω–∏—Ö: {archived_total}')

        # is_study —Ä–æ–∑–ø–æ–¥—ñ–ª
        is_study_counts = {}
        for r in all_records:
            val = r.get('is_study', 'NULL')
            is_study_counts[val] = is_study_counts.get(val, 0) + 1

        print(f'     is_study —Ä–æ–∑–ø–æ–¥—ñ–ª: {is_study_counts}')

        # –Ø–∫—â–æ –ë–ê–ì–ê–¢–û –∞—Ä—Ö—ñ–≤–Ω–∏—Ö - —Ü–µ SUCCESS!
        if archived_total > 100:
            print(f'\n  üéØüéØüéØ –ó–ù–ê–ô–î–ï–ù–û –†–Ü–®–ï–ù–ù–Ø! {archived_total} –∞—Ä—Ö—ñ–≤–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤! üéØüéØüéØ')

            # –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏
            if with_lead_reject:
                sample = with_lead_reject[0]
                print(f'\n  –ü—Ä–∏–∫–ª–∞–¥ –∞—Ä—Ö—ñ–≤–Ω–æ–≥–æ –ª—ñ–¥–∞:')
                print(f'    ID: {sample.get("id")}')
                print(f'    –ü–Ü–ë: {sample.get("name")}')
                print(f'    is_study: {sample.get("is_study")}')
                print(f'    lead_reject_id: {sample.get("lead_reject_id")}')
                print(f'    lead_status_id: {sample.get("lead_status_id")}')

    except Exception as e:
        print(f'  ‚ùå ERROR: {e}')


print('\n[–ì–†–£–ü–ê 1] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ removed')
print('-' * 80)

# –¢–µ—Å—Ç 1: removed=0 (—Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω—ñ)
test_removed('removed=0 (—Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω—ñ)', {
    'is_study': 0,
    'removed': 0,
    'page': 1,
    'page_size': 100
})

# –¢–µ—Å—Ç 2: removed=1 (–∞–∫—Ç–∏–≤–Ω—ñ + –∞—Ä—Ö—ñ–≤–Ω—ñ)
test_removed('removed=1 (–∞–∫—Ç–∏–≤–Ω—ñ + –∞—Ä—Ö—ñ–≤–Ω—ñ)', {
    'is_study': 0,
    'removed': 1,
    'page': 1,
    'page_size': 100
})

# –¢–µ—Å—Ç 3: removed=2 (–¢–Ü–õ–¨–ö–ò –ê–†–•–Ü–í–ù–Ü) - –¶–ï –ö–õ–Æ–ß–û–í–ò–ô –¢–ï–°–¢!
test_removed('removed=2 (–¢–Ü–õ–¨–ö–ò –ê–†–•–Ü–í–ù–Ü) üéØ', {
    'is_study': 0,
    'removed': 2,
    'page': 1,
    'page_size': 100
}, max_pages=20)  # –ë—ñ–ª—å—à–µ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –¥–ª—è –∞—Ä—Ö—ñ–≤—É

print('\n[–ì–†–£–ü–ê 2] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º –¥–∞—Ç')
print('-' * 80)

# –¢–µ—Å—Ç 4: removed=2 + date range (–æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—ñ–∫)
one_year_ago = (datetime.now() - timedelta(days=365)).strftime('%Y-%m-%d')
today = datetime.now().strftime('%Y-%m-%d')

test_removed(f'removed=2 + date range ({one_year_ago} to {today})', {
    'is_study': 0,
    'removed': 2,
    'removed_from': one_year_ago,
    'removed_to': today,
    'page': 1,
    'page_size': 100
}, max_pages=20)

print('\n[–ì–†–£–ü–ê 3] –†—ñ–∑–Ω—ñ is_study –∑ removed=2')
print('-' * 80)

# –¢–µ—Å—Ç 5: is_study=1 (—Å—Ç—É–¥–µ–Ω—Ç–∏ –∞—Ä—Ö—ñ–≤–Ω—ñ)
test_removed('is_study=1 + removed=2 (–∞—Ä—Ö—ñ–≤–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∏)', {
    'is_study': 1,
    'removed': 2,
    'page': 1,
    'page_size': 100
}, max_pages=10)

# –¢–µ—Å—Ç 6: is_study=2 (–∫–æ–º–±—ñ–Ω–æ–≤–∞–Ω—ñ –∞—Ä—Ö—ñ–≤–Ω—ñ)
test_removed('is_study=2 + removed=2 (–∞—Ä—Ö—ñ–≤–Ω—ñ –∫–æ–º–±—ñ–Ω–æ–≤–∞–Ω—ñ)', {
    'is_study': 2,
    'removed': 2,
    'page': 1,
    'page_size': 100
}, max_pages=10)

print('\n' + '=' * 80)
print('[–†–ï–ó–£–õ–¨–¢–ê–¢–ò]')
print('=' * 80)
print('\n‚è≥ –û—á—ñ–∫—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ removed...')
print('üìä –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ >100 –∞—Ä—Ö—ñ–≤–Ω–∏—Ö - –¶–ï –†–Ü–®–ï–ù–ù–Ø!')
print('\n' + '=' * 80)
