"""
–§–ò–ù–ê–õ–¨–ù–´–ô –≠–ö–°–ü–û–†–¢ –ê–†–•–ò–í–ù–´–• –õ–ò–î–û–í —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä removed=2

–†–ï–®–ï–ù–ò–ï –ù–ê–ô–î–ï–ù–û! ChatGPT –ø—Ä–µ–¥–ª–æ–∂–∏–ª –ø–∞—Ä–∞–º–µ—Ç—Ä 'removed':
- removed=0: —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ
- removed=1: –∞–∫—Ç–∏–≤–Ω—ã–µ + –∞—Ä—Ö–∏–≤–Ω—ã–µ
- removed=2: –¢–û–õ–¨–ö–û –∞—Ä—Ö–∏–≤–Ω—ã–µ (–≠–¢–û –†–ï–®–ï–ù–ò–ï!)

–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º:
1. –ê—Ä—Ö–∏–≤–Ω—ã–µ –ª–∏–¥—ã (is_study=0, removed=2)
2. –ê—Ä—Ö–∏–≤–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã (is_study=1, removed=2)
3. –ê—Ä—Ö–∏–≤–Ω—ã–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ (is_study=2, removed=2)

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ~7,788 –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ Web UI
"""
import os
import sys
from pathlib import Path
from dotenv import load_dotenv
import requests
import csv
from datetime import datetime

load_dotenv()

app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

from connectors.crm import alfacrm_auth_get_token

base_url = os.getenv('ALFACRM_BASE_URL')
token = alfacrm_auth_get_token()

print('=' * 80)
print('[INFO] –≠–ö–°–ü–û–†–¢ –ê–†–•–ò–í–ù–´–• –õ–ò–î–û–í (removed=2)')
print('=' * 80)


def fetch_archived_records(is_study_val, category_name, max_pages=200):
    """–ü–æ–ª—É—á–∏—Ç—å –í–°–ï –∞—Ä—Ö–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ is_study –∑–Ω–∞—á–µ–Ω–∏—è"""
    all_records = []
    page = 1

    print(f'\n[FETCH] –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–Ω—ã—Ö {category_name} (is_study={is_study_val})...', flush=True)

    while page <= max_pages:
        try:
            response = requests.post(
                f'{base_url}/v2api/customer/index',
                headers={'X-ALFACRM-TOKEN': token},
                json={
                    'is_study': is_study_val,
                    'removed': 2,  # –ö–õ–Æ–ß–ï–í–û–ô –ü–ê–†–ê–ú–ï–¢–†!
                    'page': page,
                    'page_size': 500
                },
                timeout=15
            )

            if response.status_code != 200:
                print(f'  ‚ùå HTTP {response.status_code} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page}', flush=True)
                break

            data = response.json()
            items = data.get('items', [])

            if not items:
                print(f'  –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}: –ø—É—Å—Ç–æ, –∑–∞–≤–µ—Ä—à–µ–Ω–æ', flush=True)
                break

            all_records.extend(items)

            if page % 10 == 0:
                print(f'  –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}: —Å–æ–±—Ä–∞–Ω–æ {len(all_records)} –∑–∞–ø–∏—Å–µ–π...', flush=True)

            page += 1

        except Exception as e:
            print(f'[ERROR] is_study={is_study_val}, page={page}: {e}')
            break

    print(f'[OK] {category_name}: –ø–æ–ª—É—á–µ–Ω–æ {len(all_records)} –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∑–∞ {page-1} —Å—Ç—Ä–∞–Ω–∏—Ü', flush=True)
    return all_records


print('\n[STEP 1/5] –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...')
print('-' * 80)

archived_records = {}

# –ê—Ä—Ö–∏–≤–Ω—ã–µ –ª–∏–¥—ã (lead_reject_id)
archived_records[0] = fetch_archived_records(0, '–ª–∏–¥—ã', max_pages=200)

# –ê—Ä—Ö–∏–≤–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã (customer_reject_id)
archived_records[1] = fetch_archived_records(1, '—Å—Ç—É–¥–µ–Ω—Ç—ã', max_pages=200)

# –ê—Ä—Ö–∏–≤–Ω—ã–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
archived_records[2] = fetch_archived_records(2, '–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ', max_pages=100)

print('\n[STEP 2/5] –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ ID...')
print('-' * 80)

unique_archived = {}

for is_study_val, records in archived_records.items():
    for record in records:
        record_id = record.get('id')
        if record_id not in unique_archived:
            unique_archived[record_id] = record

total_before = sum(len(records) for records in archived_records.values())
total_after = len(unique_archived)
duplicates_removed = total_before - total_after

print(f'–í—Å–µ–≥–æ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–æ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏: {total_before}')
print(f'–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ—Å–ª–µ: {total_after}')
print(f'–î—É–±–ª–∏–∫–∞—Ç–æ–≤ —É–¥–∞–ª–µ–Ω–æ: {duplicates_removed} ({duplicates_removed/total_before*100 if total_before > 0 else 0:.1f}%)')

print('\n[STEP 3/5] –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...')
print('-' * 80)

with_lead_reject = [r for r in unique_archived.values() if r.get('lead_reject_id')]
with_customer_reject = [r for r in unique_archived.values() if r.get('customer_reject_id')]

print(f'–ê—Ä—Ö–∏–≤–Ω—ã–µ –ª–∏–¥—ã (lead_reject_id): {len(with_lead_reject)}')
print(f'–ê—Ä—Ö–∏–≤–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã (customer_reject_id): {len(with_customer_reject)}')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ is_study —Ä–∞–∑–±–∏–≤–∫–∏
is_study_counts = {}
for r in unique_archived.values():
    val = r.get('is_study', 'NULL')
    is_study_counts[val] = is_study_counts.get(val, 0) + 1

print(f'is_study —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {is_study_counts}')

print('\n[STEP 4/5] –ü—Ä–∏–º–µ—Ä—ã –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...')
print('-' * 80)

if with_lead_reject:
    sample = with_lead_reject[0]
    print(f'\n–ü—Ä–∏–º–µ—Ä –∞—Ä—Ö–∏–≤–Ω–æ–≥–æ –ª–∏–¥–∞:')
    print(f'  ID: {sample.get("id")}')
    print(f'  –ü–Ü–ë: {sample.get("name")}')
    print(f'  is_study: {sample.get("is_study")}')
    print(f'  lead_reject_id: {sample.get("lead_reject_id")}')
    print(f'  lead_status_id: {sample.get("lead_status_id")}')

if with_customer_reject:
    sample = with_customer_reject[0]
    print(f'\n–ü—Ä–∏–º–µ—Ä –∞—Ä—Ö–∏–≤–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞:')
    print(f'  ID: {sample.get("id")}')
    print(f'  –ü–Ü–ë: {sample.get("name")}')
    print(f'  is_study: {sample.get("is_study")}')
    print(f'  customer_reject_id: {sample.get("customer_reject_id")}')

print('\n[STEP 5/5] –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV...')
print('-' * 80)

timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
output_file = f'alfacrm_archived_leads_export_{timestamp}.csv'

if unique_archived:
    sample_record = list(unique_archived.values())[0]
    fieldnames = list(sample_record.keys())

    with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()

        for record in unique_archived.values():
            writer.writerow(record)

    file_size = os.path.getsize(output_file) / 1024 / 1024

    print(f'\n[SUCCESS] –≠–∫—Å–ø–æ—Ä—Ç –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!')
    print(f'–§–∞–π–ª: {output_file}')
    print(f'–†–∞–∑–º–µ—Ä: {file_size:.2f} MB')
    print(f'–í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(unique_archived)}')
    print(f'–ü–æ–ª–µ–π –≤ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏: {len(fieldnames)}')
    print(f'\n–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:')
    print(f'  –ê—Ä—Ö–∏–≤–Ω—ã–µ –ª–∏–¥—ã: {len(with_lead_reject)}')
    print(f'  –ê—Ä—Ö–∏–≤–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã: {len(with_customer_reject)}')

else:
    print('[ERROR] –ù–µ—Ç –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞!')

print('\n' + '=' * 80)
print('[INFO] –ó–ê–í–ï–†–®–ï–ù–û')
print('=' * 80)
print('\nüéØ –†–ï–®–ï–ù–ò–ï: –ø–∞—Ä–∞–º–µ—Ç—Ä removed=2 –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –í–°–ï–ú –∞—Ä—Ö–∏–≤–Ω—ã–º –∑–∞–ø–∏—Å—è–º!')
print('üí° –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å ChatGPT –∑–∞ –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ removed!')
print('=' * 80)
